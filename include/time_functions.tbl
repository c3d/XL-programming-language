// *****************************************************************************
// time_functions.tbl                                                 XL project
// *****************************************************************************
//
// File description:
//
//     Functions dealing with time management
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2015-2017,2019-2020, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

FUNCTION(sleep, integer,
         PARM(duration, real),
         struct timespec ts;
         ts.tv_sec = (time_t) floor(duration);
         ts.tv_nsec = (long) floor(1.0e9 * (duration - ts.tv_sec));
         R_INT(nanosleep(&ts, nullptr)));

#define R_TIME(tmfield)                         \
    struct tm tm = { 0 };                       \
    time_t clock;                               \
    time(&clock);                               \
    localtime_r(&clock, &tm);                   \
    R_INT(tmfield)


NAME_FN(Hours,          integer, "hours",       R_TIME(tm.tm_hour));
NAME_FN(Minutes,        integer, "minutes",     R_TIME(tm.tm_min));
NAME_FN(Seconds,        integer, "seconds",     R_TIME(tm.tm_sec));
NAME_FN(Year,           integer, "year",        R_TIME(tm.tm_year+1900));
NAME_FN(Month,          integer, "month",       R_TIME(tm.tm_mon));
NAME_FN(Day,            integer, "day",         R_TIME(tm.tm_mday));
NAME_FN(WeekDay,        integer, "week_day",    R_TIME(tm.tm_wday));
NAME_FN(YearDay,        integer, "year_day",    R_TIME(tm.tm_yday));

NAME_FN(Time,           real,   "time",
        struct timeval tv;
        gettimeofday(&tv, nullptr);
        R_REAL(tv.tv_sec % 86400 + 1.0e-6 * tv.tv_usec));
